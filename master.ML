(*use "pp.sig";
use "pp.sml";
open pp;

*)
use "term.sig";
use "term.sml";
open term;
(*
val _ = PolyML.addPrettyPrinter PPterm;
*)

use "form.sig";
use "form.sml";
open form;

use "logic.sig";
use "logic.sml";
open logic;

use "pp.sig";
use "pp.sml";
open pp;

use "token.sig";
use "token.sml";
open token;

use "pterm_dtype.sml";
open pterm_dtype;


use "pterm.sig";
use "pterm.sml";
open pterm;

use "drule.sig";
use "drule.sml";
open drule;

use "infixes.sml";
use "abbrev.sig";
use "abbrev.sml";
open abbrev;


use "conv.sig"; 
use "conv.sml";
open conv;

use "tactic.sig";
use "tactic.sml";
open tactic;


use "goalstack.sig";
use "goalstack.sml";
open goalstack;

